// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  resumes       Resume[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Resume {
   id        String      @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  profile   Profile?  
  education Education[]
  experience Experience[]
  project Project[]
  skill Skill?
}

model Profile {
  id        String      @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String
  phone     String
  linkedin  String
  github    String
  resumeId  String      @unique
  resume    Resume   @relation(fields: [resumeId], references: [id])
}

model Education {
  id        String      @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  institution    String
  title    String
  location     String
  period     String
  resumeId  String 
  resume    Resume   @relation(fields: [resumeId], references: [id])
}

model Experience {
  id        String      @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title    String
  company    String
  location     String
  start_date     String
  end_date     String
  description     String[]
  resumeId  String 
  resume    Resume   @relation(fields: [resumeId], references: [id])
}

model Project {
  id        String      @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title    String
  description    String[]
  link     String
  duration     String
  tech_stack     String[]
  resumeId  String 
  resume    Resume   @relation(fields: [resumeId], references: [id])
}

model Skill {
  id        String      @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  languages    String[]
  frameworks_libraries    String[]
  databases    String[]
  developer_tools    String[]
  resumeId  String @unique
  resume    Resume   @relation(fields: [resumeId], references: [id])
}